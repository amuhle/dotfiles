# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"
#ZSH_THEME="amuse"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment following line if you want to  shown in the command execution time stamp
# in the history command output. The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|
# yyyy-mm-dd
# HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(github rails git lol bundler common-aliases kubectl)
autoload -U compinit && compinit

source $ZSH/oh-my-zsh.sh

pathdirs=(
/opt/local/etc
/opt/local/bin
/opt/local/sbin
$HOME/.bin
$HOME/.local/bin
/home/alvaro/go/bin
)

for dir in $pathdirs; do
    if [ -d $dir ]; then
        path+=$dir
    fi
done

# User configuration

# # scripting editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
export EDITOR='vim'
export GOPATH='/home/alvaro/go'
# else
#   export EDITOR='mvim'
# fi

# Aliases
alias zshconfig="vim ~/.zshrc"
alias reload!="source ~/.zshrc"

#ALIAS
alias busquelo!='grep -r -n'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -l'
alias gen_tags='ctags -R -f .tags'
alias gs='git status'
alias gd='git diff'
alias gfa='git fetch --all'
alias be='bundle exec'
alias nrs='npm run start'
alias nrb='npm run build'

# Tmuxinator aliasses
alias tms='tmuxinator start'
alias tme='tmuxinator edit'
alias tmn='tmuxinator new'
#
# # Neovim
alias vim=nvim

# Kubectl
alias kar='kubectl-argo-rollouts'
alias karlr='kubectl-argo-rollouts list rollouts'

export ANDROID_HOME='/Users/alvaro/development/adt-bundle-mac-x86_64/sdk'
export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
export PATH="/usr/local/bin:$PATH"

export NVM_DIR="/Users/alvaro/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#tmuxinator
source ~/.bin/tmuxinator.zsh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
# --files: List files that would be searched but do not search
# # --no-ignore: Do not respect .gitignore, etc...
# # --hidden: Search hidden files and folders
# # --follow: Follow symlinks
# # --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
# export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'
#

#Adds copy and paste for vim

alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'

alias python='python3'

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/alvaro/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/home/alvaro/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/alvaro/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/alvaro/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/alvaro/.sdkman"
[[ -s "/home/alvaro/.sdkman/bin/sdkman-init.sh" ]] && source "/home/alvaro/.sdkman/bin/sdkman-init.sh"
